// –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–∞–∑–æ–≤–æ–π —Å—Ü–µ–Ω—ã –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞—Ñ
const { Scenes: { BaseScene } } = require('telegraf')
const { DateTime } = require('luxon');
const fs = require('fs')
// —Å–æ–∑–¥–∞–º –Ω–æ–≤—É—é –±–∞–∑–æ–≤—É—é —Å—Ü–µ–Ω—É - shedule
const shedule = new BaseScene('shedule');
const ruWeekdays = require('../services/ruWeekdays');
const shortWeekdayName = require('../services/shortWeekdaysNames')
const errorKeyboard = require('../keyboards/error')
const additionalKeyboard = require('../keyboards/additional')



const now = DateTime.now()
// —Ä–∞–±–æ—Ç–∞—é —Å —Å–æ–±—ã—Ç–∏–µ–º –≤—Ö–æ–¥–∞ –≤ —Å—Ü–µ–Ω—É, —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ –∫–æ–¥–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å—Ü–µ–Ω—É
shedule.enter((ctx) => {
    // –£–¥–∞–ª–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ö–ª–∞–º–ª—è—Ç—å —á–∞—Ç
    // // —á–∞—Ç –∞–π–¥–∏ —É–∂–µ –Ω–∞—Ö–æ–¥–∏–ª –≤ –º–æ–¥—É–ª–µ —Å—Ç–∞—Ä—Ç, –∞ –º–µ—Å—Å–µ–¥–∂ –∞–π–¥–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–æ—Ç —Ç–∞–∫:
    ctx.tg.deleteMessage(ctx.chat.id, ctx.update.callback_query.message.message_id)
    // –±–µ—Ä—É –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å(—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –∑–∞–≤—Ç—Ä–∞ –∏–ª–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏)
    let weekday = ctx.scene.state.weekday
    let option = ctx.scene.state.option
    // –≤—ã–±–∏—Ä–∞—é –∫–∞–∫–æ–π –±—É–¥–µ—Ç –∫–æ—Ä–ø—É—Å
    let building = 0
    switch(ctx.session.userBuilding){
        case 'A':
            building = 1 
            break
        case 'B':
            building = 2
            break
    }
    // –æ–±—ä—è–≤–ª—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏
    let weekdayName;
    // console.log()
    switch(option){
        case 'today':
            weekday = now.weekday-1
            ctx.scene.state.weekday = now.weekday-1
            weekdayName = ruWeekdays.weekdayFromNumber(weekday)
            break
        case 'tomorrow':
            ctx.scene.state.weekday = now.weekday
            weekday = now.weekday
            weekdayName = ruWeekdays.weekdayFromNumber(weekday)
            break
        case 'other_day':
            weekdayName = ruWeekdays.weekdayFromNumber(weekday)
    }
    console.log(weekday + ' in shedule')
    let shortWeekday = shortWeekdayName(weekday)
    console.log(weekday+ ' after shortWeekdayName')
    var shedulePhotoPath = `src/screenshots/${ctx.session.userBuilding}/${ctx.session.userShift}/${shortWeekday}.jpeg`
    // console.log(shedulePhotoPath)
    var shedulePhoto = fs.readFileSync(shedulePhotoPath)
    // console.log(shedulePhoto)
    if(ctx.session.userBuilding && ctx.session.userShift && weekday){
        if (ctx.session.notShakal) {
            ctx.tg.sendDocument(ctx.chat.id, { source: shedulePhoto, filename: `${Math.random() * 1000}.jpeg` }, { 
                caption: `–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ${building} –∫–æ—Ä–ø—É—Å–∞ , ${ctx.session.userShift} —Å–º–µ–Ω—ã –Ω–∞ ${weekdayName}`,
                reply_markup: additionalKeyboard(ctx)
            })
        }
        else {
            ctx.tg.sendPhoto(ctx.chat.id, { source: shedulePhoto }, { 
                caption: `–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ${building} –∫–æ—Ä–ø—É—Å–∞ , ${ctx.session.userShift} —Å–º–µ–Ω—ã –Ω–∞ ${weekdayName}`,
                reply_markup:  additionalKeyboard(ctx) 
         })
        }
    }
    else{
        ctx.tg.sendMessage(ctx.chat.id, 'üîß–û–±–Ω–æ–≤–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏üîß', {
            reply_markup: errorKeyboard
        })
    }
    

    // –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–¥–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ, –æ–±—Ä–∞—â–∞—é—Å—å –∫ —Å—Ü–µ–Ω–µ –∏ –¥–µ–ª–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É
    // // –ë–µ—Ä—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è - –ª—é–±–æ–µ, —Ä–µ–∞–ª–∏–∑—É—é —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, —Ç–æ–µ—Å—Ç—å –ª—é–±–æ–π –¥–∏–∞–ø–æ–∑–æ–Ω –æ—Ç a –¥–æ z —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ —Ä–∞–∑
    shedule.action(/[A-z]+$/, (ctx) => {
        // –ó–∞–ø–∏—à—É –∑–Ω–∞—á–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –¥–ª—è —ç—Ç–æ–≥–æ —É ctx –æ–±—Ä–∞—â—É—Å—å –∫ match –∏ –≤–æ–∑—å–º—É 1 —ç–ª–µ–º–µ–Ω—Ç:
        var userAction = ctx.match[0]

        switch (userAction) {
            case 'userWeekdayToday':
                ctx.scene.leave('shedule')
                ctx.scene.enter('shedule', {'option':'today'})
                break
            case 'userWeekdayTomorrow':
                if(now.weekday == 7) weekday == 0
                ctx.scene.leave('shedule')
                ctx.scene.enter('shedule', {'option':'tomorrow'})
                break
            case 'userWeekdayUpdate':
                ctx.scene.leave('shedule')
                console.log(ctx.scene.state.weekday+ ' in update')
                ctx.scene.enter('shedule', {'option':'other_day', 'weekday':ctx.scene.state.weekday})
                break
            case 'changeSettings':
                ctx.scene.leave('shedule')
                ctx.scene.enter('settings')
                break
            case 'changeWeekday':
                ctx.scene.leave('shedule')
                ctx.scene.enter('weekdays')
                break
        }
    })
})

// –µ–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é —Å—Ü–µ–Ω—É

module.exports = shedule